# BTC-Reduced Classification with Class Imbalance Handling
# Configuration for testing different sampling strategies to address
# the severe class imbalance in Bitcoin entity classification

experiment:
  name: "BTC_Reduced_Balanced_Sampling"
  description: "Bitcoin entity classification with multiple sampling strategies for class imbalance"
  output_dir: "btc_balanced_results"
  
dataset:
  name: "btc-reduced"
  max_nodes: 5000  # Moderate size for testing sampling strategies

parameters:
  dimensions: [64, 128]  # Test two key dimensions
  n_runs: 3  # Multiple runs for statistical significance
  test_size: 0.2
  random_seed: 42
  
# Sampling strategies to address class imbalance
sampling:
  strategies: [
    "none",              # Baseline - no sampling
    "class_weight",      # Use balanced class weights in classifier
    "ros",               # Random Over-Sampling
    "smote",             # SMOTE - Synthetic Minority Over-sampling
    "borderline_smote",  # Borderline SMOTE - focus on decision boundary
    "adasyn",            # Adaptive Synthetic Sampling
    "rus",               # Random Under-Sampling
    "smote_tomek",       # Combined: SMOTE + Tomek links removal
    "smote_enn"          # Combined: SMOTE + Edited Nearest Neighbors
  ]
  smote_neighbors: 5    # K-neighbors for SMOTE (will be adjusted for small classes)
  random_state: 42

classification:
  classifier: "logistic_regression"
  params:
    max_iter: 2000
    solver: "lbfgs"
    random_state: 42
    multi_class: "ovr"
  preprocessing:
    scale_features: true
    # Note: class_weight is handled by sampling strategy

# Test with best performing methods
methods:
  full_graph:
    enabled: true
    description: "VGAE on full BTC graph (baseline)"
    base_embedding:
      method: "vgae"
      epochs: 100
      learning_rate: 0.001
      patience: 20
      verbose: false
  
  l2g_rademacher:
    enabled: true
    description: "Patched VGAE with L2G alignment"
    base_embedding:
      method: "vgae" 
      epochs: 100
      learning_rate: 0.001
      patience: 20
      verbose: false
    patches:
      num_patches: 10
      clustering_method: "metis"
      min_overlap: 128
      target_overlap: 256
      sparsify_method: "resistance"
      target_patch_degree: 3
      use_conductance_weighting: true
    alignment:
      method: "l2g"
      randomized_method: "randomized"
      sketch_method: "rademacher"
  
  hierarchical_l2g:
    enabled: true
    description: "Hierarchical with increased overlaps for sparse graph"
    base_embedding:
      method: "vgae"
      epochs: 100
      learning_rate: 0.001
      patience: 20
      verbose: false
    hierarchical:
      max_patch_size: 1000
      min_overlap: 256  # Increased for sparse graph
      target_overlap: 512

# Plotting configuration
plotting:
  save_formats: ["png", "pdf"]
  figure_size: [14, 10]
  dpi: 150
  
# Output configuration
output:
  save_raw_results: true
  save_summary: true
  save_plots: true
  save_report: true

# Evaluation focus on balanced metrics
evaluation:
  primary_metric: "balanced_accuracy"  # Better than accuracy for imbalanced data
  secondary_metrics: ["f1_macro", "f1_weighted", "precision_macro", "recall_macro"]
  per_class_analysis: true
  confusion_matrix: true
  
  # Focus on minority classes that are important
  priority_classes: ["EXCHANGE", "MIXER", "RANSOMWARE", "PONZI", "BRIDGE", "FAUCET"]