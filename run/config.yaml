# L2GX Experiment Configuration for Cora Dataset
# Configuration file for node reconstruction and classification experiments

# Dataset Configuration
dataset:
  name: "Cora"
  # Use predefined train/val/test splits if available
  use_default_splits: true
  # Custom split ratios (only used if use_default_splits is false)
  train_ratio: 0.6
  val_ratio: 0.2
  test_ratio: 0.2
  # Random seed for reproducible splits
  split_seed: 42

# Embedding Configuration
embedding:
  # Embedding method: ['gae', 'vgae', 'svd', 'graphsage', 'dgi']
  method: "vgae"
  # Embedding dimension
  embedding_dim: 64
  # Hidden layer dimensions for neural methods (GAE/VGAE/GraphSAGE/DGI)
  hidden_dim: 32
  # Number of training epochs for neural methods
  num_epochs: 200
  # Learning rate for neural methods
  learning_rate: 0.01
  # Dropout rate for neural methods
  dropout: 0.5
  # For GraphSAGE: aggregator type ['mean', 'max', 'lstm']
  graphsage_aggregator: "mean"
  # For DGI: encoder type ['gcn', 'gat', 'sage']
  dgi_encoder: "gcn"
  # For SVD: matrix type ['adjacency', 'laplacian', 'normalized']
  svd_matrix_type: "normalized"

# Patch Configuration
patches:
  # Number of patches to create
  num_patches: 10
  # Clustering method for patch creation: ['metis', 'louvain', 'fennel', 'hierarchical']
  clustering_method: "metis"
  # Minimum overlap between patches (number of nodes)
  min_overlap: 27
  # Target overlap between patches (number of nodes)
  target_overlap: 54
  # Sparsification method: ['resistance', 'edge_sampling', 'nearest_neighbor']
  sparsification_method: "resistance"
  # Sparsification parameters
  sparsification_params:
    # For resistance sparsification
    resistance_alpha: 0.1
    # For edge sampling
    sampling_rate: 0.8
    # For k-nearest neighbors
    k_neighbors: 5

# Alignment Configuration
alignment:
  # Alignment method: ['geo', 'geo2', 'l2g']
  method: "geo2"
  # Number of alignment epochs
  num_epochs: 1000
  # Learning rate for alignment
  learning_rate: 0.01
  # Use orthogonal regularization
  use_orthogonal_reg: true
  # Orthogonal regularization weight
  orthogonal_reg_weight: 100
  # Use BFS training order
  use_bfs_training: true
  # Center patches before alignment
  center_patches: false
  # Minimum overlap for alignment
  min_overlap: 27

# Task 1: Node Reconstruction Configuration
node_reconstruction:
  # Loss function: ['mse', 'binary_crossentropy', 'cosine_similarity']
  loss_function: "mse"
  # Evaluation metrics: ['mse', 'mae', 'cosine_similarity', 'reconstruction_auc']
  evaluation_metrics: ["mse", "mae", "cosine_similarity"]
  # Reconstruction method: ['autoencoder', 'linear_decoder', 'mlp_decoder']
  reconstruction_method: "autoencoder"
  # Decoder hidden dimensions (for MLP decoder)
  decoder_hidden_dims: [32, 64]

# Task 2: Node Classification Configuration
node_classification:
  # Classifier type: ['logistic_regression', 'mlp', 'svm', 'random_forest']
  classifier: "logistic_regression"
  # For MLP classifier
  mlp_hidden_dims: [32]
  mlp_num_epochs: 100
  mlp_learning_rate: 0.001
  mlp_dropout: 0.2
  # For SVM
  svm_kernel: "rbf"
  svm_C: 1.0
  # For Random Forest
  rf_n_estimators: 100
  rf_max_depth: 10
  # Evaluation metrics
  evaluation_metrics: ["accuracy", "f1_macro", "f1_micro", "precision", "recall"]
  # Use stratified splits for small classes
  stratify: true

# Hyperparameter Search Configuration
hyperparameter_search:
  # Enable hyperparameter search
  enabled: false
  # Search method: ['grid', 'random', 'optuna']
  method: "grid"
  # Number of trials for random/optuna search
  n_trials: 50
  # Parameters to search over
  search_space:
    embedding_dim: [32, 64, 128]
    hidden_dim: [16, 32, 64]
    learning_rate: [0.001, 0.01, 0.1]
    num_epochs: [100, 200, 300]
    num_patches: [5, 10, 15, 20]

# Experimental Settings
experiment:
  # Experiment name (used for output directory)
  name: "cora_embedding_experiment"
  # Random seed for reproducibility
  random_seed: 42
  # Number of runs to average over
  num_runs: 5
  # Device to use: ['cpu', 'cuda', 'auto']
  device: "auto"
  # Verbose output
  verbose: true
  # Save intermediate results
  save_intermediate: true
  # Output directory
  output_dir: "experiments/results"

# Logging Configuration
logging:
  # Log level: ['DEBUG', 'INFO', 'WARNING', 'ERROR']
  level: "INFO"
  # Log to file
  log_to_file: true
  # Log file path
  log_file: "experiments/logs/experiment.log"
  # Log format
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# Visualization Configuration
visualization:
  # Create visualizations
  enabled: true
  # Visualization methods: ['tsne', 'umap', 'pca']
  methods: ["tsne", "umap"]
  # Save plots
  save_plots: true
  # Plot format: ['png', 'pdf', 'svg']
  plot_format: "png"
  # DPI for saved plots
  plot_dpi: 300